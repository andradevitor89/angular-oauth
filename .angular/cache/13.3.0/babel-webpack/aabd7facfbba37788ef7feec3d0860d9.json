{"ast":null,"code":"import _asyncToGenerator from \"/home/vitor/Documents/Projetos/oauth-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { JwksValidationHandler } from 'angular-oauth2-oidc-jwks';\nimport { authCodeFlowConfig } from '../sso.config';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"angular-oauth2-oidc\";\nexport class LoginComponent {\n  constructor(oAuthService) {\n    this.oAuthService = oAuthService;\n    this.title = 'oauth-app';\n    this.oAuthService.configure(authCodeFlowConfig);\n    this.oAuthService.tokenValidationHandler = new JwksValidationHandler();\n    this.oAuthService.loadDiscoveryDocumentAndTryLogin();\n  }\n\n  ngOnInit() {}\n\n  login() {\n    this.oAuthService.initImplicitFlow();\n  }\n\n  logout() {\n    this.oAuthService.logOut();\n  }\n\n  printUserInfo() {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      console.log('hasValidAccessToken', _this.oAuthService.hasValidAccessToken());\n      console.log('loadUserProfile', yield _this.oAuthService.loadUserProfile());\n\n      _this.oAuthService.hasValidAccessToken();\n    })();\n  }\n\n  get token() {\n    return this.oAuthService.getIdentityClaims();\n  }\n\n}\n\nLoginComponent.ɵfac = function LoginComponent_Factory(t) {\n  return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.OAuthService));\n};\n\nLoginComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: LoginComponent,\n  selectors: [[\"app-login\"]],\n  decls: 0,\n  vars: 0,\n  template: function LoginComponent_Template(rf, ctx) {},\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJsb2dpbi5jb21wb25lbnQuY3NzIn0= */\"]\n});","map":{"version":3,"sources":["/home/vitor/Documents/Projetos/oauth-app/src/app/login/login.component.ts"],"names":["JwksValidationHandler","authCodeFlowConfig","i0","i1","LoginComponent","constructor","oAuthService","title","configure","tokenValidationHandler","loadDiscoveryDocumentAndTryLogin","ngOnInit","login","initImplicitFlow","logout","logOut","printUserInfo","console","log","hasValidAccessToken","loadUserProfile","token","getIdentityClaims","ɵfac","LoginComponent_Factory","t","ɵɵdirectiveInject","OAuthService","ɵcmp","ɵɵdefineComponent","type","selectors","decls","vars","template","LoginComponent_Template","rf","ctx","styles"],"mappings":";AAAA,SAASA,qBAAT,QAAsC,0BAAtC;AACA,SAASC,kBAAT,QAAmC,eAAnC;AACA,OAAO,KAAKC,EAAZ,MAAoB,eAApB;AACA,OAAO,KAAKC,EAAZ,MAAoB,qBAApB;AACA,OAAO,MAAMC,cAAN,CAAqB;AACxBC,EAAAA,WAAW,CAACC,YAAD,EAAe;AACtB,SAAKA,YAAL,GAAoBA,YAApB;AACA,SAAKC,KAAL,GAAa,WAAb;AACA,SAAKD,YAAL,CAAkBE,SAAlB,CAA4BP,kBAA5B;AACA,SAAKK,YAAL,CAAkBG,sBAAlB,GAA2C,IAAIT,qBAAJ,EAA3C;AACA,SAAKM,YAAL,CAAkBI,gCAAlB;AACH;;AACDC,EAAAA,QAAQ,GAAG,CAAG;;AACdC,EAAAA,KAAK,GAAG;AACJ,SAAKN,YAAL,CAAkBO,gBAAlB;AACH;;AACDC,EAAAA,MAAM,GAAG;AACL,SAAKR,YAAL,CAAkBS,MAAlB;AACH;;AACKC,EAAAA,aAAa,GAAG;AAAA;;AAAA;AAClBC,MAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmC,KAAI,CAACZ,YAAL,CAAkBa,mBAAlB,EAAnC;AACAF,MAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,QAAqC,KAAI,CAACZ,YAAL,CAAkBc,eAAlB,EAArC;;AACA,MAAA,KAAI,CAACd,YAAL,CAAkBa,mBAAlB;AAHkB;AAIrB;;AACQ,MAALE,KAAK,GAAG;AACR,WAAO,KAAKf,YAAL,CAAkBgB,iBAAlB,EAAP;AACH;;AAtBuB;;AAwB5BlB,cAAc,CAACmB,IAAf,GAAsB,SAASC,sBAAT,CAAgCC,CAAhC,EAAmC;AAAE,SAAO,KAAKA,CAAC,IAAIrB,cAAV,EAA0BF,EAAE,CAACwB,iBAAH,CAAqBvB,EAAE,CAACwB,YAAxB,CAA1B,CAAP;AAA0E,CAArI;;AACAvB,cAAc,CAACwB,IAAf,GAAsB,aAAc1B,EAAE,CAAC2B,iBAAH,CAAqB;AAAEC,EAAAA,IAAI,EAAE1B,cAAR;AAAwB2B,EAAAA,SAAS,EAAE,CAAC,CAAC,WAAD,CAAD,CAAnC;AAAoDC,EAAAA,KAAK,EAAE,CAA3D;AAA8DC,EAAAA,IAAI,EAAE,CAApE;AAAuEC,EAAAA,QAAQ,EAAE,SAASC,uBAAT,CAAiCC,EAAjC,EAAqCC,GAArC,EAA0C,CAAG,CAA9H;AAAgIC,EAAAA,MAAM,EAAE,CAAC,qKAAD;AAAxI,CAArB,CAApC","sourcesContent":["import { JwksValidationHandler } from 'angular-oauth2-oidc-jwks';\nimport { authCodeFlowConfig } from '../sso.config';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"angular-oauth2-oidc\";\nexport class LoginComponent {\n    constructor(oAuthService) {\n        this.oAuthService = oAuthService;\n        this.title = 'oauth-app';\n        this.oAuthService.configure(authCodeFlowConfig);\n        this.oAuthService.tokenValidationHandler = new JwksValidationHandler();\n        this.oAuthService.loadDiscoveryDocumentAndTryLogin();\n    }\n    ngOnInit() { }\n    login() {\n        this.oAuthService.initImplicitFlow();\n    }\n    logout() {\n        this.oAuthService.logOut();\n    }\n    async printUserInfo() {\n        console.log('hasValidAccessToken', this.oAuthService.hasValidAccessToken());\n        console.log('loadUserProfile', await this.oAuthService.loadUserProfile());\n        this.oAuthService.hasValidAccessToken();\n    }\n    get token() {\n        return this.oAuthService.getIdentityClaims();\n    }\n}\nLoginComponent.ɵfac = function LoginComponent_Factory(t) { return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.OAuthService)); };\nLoginComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: LoginComponent, selectors: [[\"app-login\"]], decls: 0, vars: 0, template: function LoginComponent_Template(rf, ctx) { }, styles: [\"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJsb2dpbi5jb21wb25lbnQuY3NzIn0= */\"] });\n"]},"metadata":{},"sourceType":"module"}